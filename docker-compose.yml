
services:
  nginx:
    image: nginx:latest
    container_name: "TS_nginx"
    ports:
      - "443:443"
    volumes:
      # /srv/nginx/nginx.conf:/etc/nginx/nginx.conf
      # /srv/nginx/certs:/etc/nginx/certs
      - /srv/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - /srv/nginx/conf.d:/etc/nginx/conf.d
      - /srv/nginx/certs:/etc/nginx/certs:ro
      - /srv/nginx/logs:/var/log/nginx
      - /srv/uploads:/data/uploads:ro
    depends_on: 
      - nodejs
      - fastapi
    networks:
      - TS_net
    restart: always

  nodejs:
    build: ./nodejs
    container_name: TS_node
    env_file:
      - ./nodejs/.env
    networks:
      - TS_net

  fastapi:
    build: ./fastapi
    container_name: TS_fastapi
    env_file:
      - ./fastapi/.env
    volumes:
      - /srv/uploads:/data/uploads
    depends_on:
      - postgres
    networks:
      - TS_net
    restart: always


  postgres:
      image: postgres:15
      container_name: TS_postgres
      restart: always
      environment:
        POSTGRES_USER: TS_user
        POSTGRES_PASSWORD: TS_pass
        POSTGRES_DB: TS_db
      volumes:
        - /srv/postgres/data:/var/lib/postgresql/data
        # - /srv/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      networks:
        - TS_net


networks:
  TS_net:        # 단일 네트워크만 사용
    driver: bridge
